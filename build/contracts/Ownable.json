{
  "contractName": "Ownable",
  "abi": [
    {
<<<<<<< HEAD
=======
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@klaytn/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
<<<<<<< HEAD
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n",
  "sourcePath": "@klaytn\\contracts\\access\\Ownable.sol",
  "ast": {
    "absolutePath": "@klaytn/contracts/access/Ownable.sol",
    "exportedSymbols": {
      "Context": [
        1580
      ],
      "Ownable": [
        1245
      ]
    },
    "id": 1246,
=======
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\access\\Ownable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
    "exportedSymbols": {
      "Context": [
        1902
      ],
      "Ownable": [
        147
      ]
    },
    "id": 148,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 1142,
=======
        "id": 1,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
        "literals": [
          "solidity",
          "^",
          "0.8",
<<<<<<< HEAD
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "87:23:7"
      },
      {
        "absolutePath": "@klaytn/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 1143,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1246,
        "sourceUnit": 1581,
        "src": "112:30:7",
        "symbolAliases": [],
=======
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "102:24:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "../utils/Context.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 1903,
        "src": "128:45:0",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "Context",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1902,
              "src": "136:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 1145,
              "name": "Context",
              "nameLocations": [
                "668:7:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1580,
              "src": "668:7:7"
            },
            "id": 1146,
            "nodeType": "InheritanceSpecifier",
            "src": "668:7:7"
=======
              "id": 5,
              "name": "Context",
              "nameLocations": [
                "692:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1902,
              "src": "692:7:0"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "692:7:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
<<<<<<< HEAD
          "id": 1144,
          "nodeType": "StructuredDocumentation",
          "src": "144:494:7",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 1245,
        "linearizedBaseContracts": [
          1245,
          1580
        ],
        "name": "Ownable",
        "nameLocation": "657:7:7",
=======
          "id": 4,
          "nodeType": "StructuredDocumentation",
          "src": "175:487:0",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 147,
        "linearizedBaseContracts": [
          147,
          1902
        ],
        "name": "Ownable",
        "nameLocation": "681:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
<<<<<<< HEAD
            "id": 1148,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "698:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1245,
            "src": "682:22:7",
=======
            "id": 8,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "722:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "706:22:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 1147,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "682:7:7",
=======
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "706:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
<<<<<<< HEAD
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 1154,
            "name": "OwnershipTransferred",
            "nameLocation": "717:20:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1153,
=======
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "735:85:0",
              "text": " @dev The caller account is not authorized to perform an operation."
            },
            "errorSelector": "118cdaa7",
            "id": 13,
            "name": "OwnableUnauthorizedAccount",
            "nameLocation": "831:26:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "866:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "858:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "857:17:0"
            },
            "src": "825:50:0"
          },
          {
            "documentation": {
              "id": 14,
              "nodeType": "StructuredDocumentation",
              "src": "881:82:0",
              "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
            },
            "errorSelector": "1e4fbdf7",
            "id": 18,
            "name": "OwnableInvalidOwner",
            "nameLocation": "974:19:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1002:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "994:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "993:15:0"
            },
            "src": "968:41:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 24,
            "name": "OwnershipTransferred",
            "nameLocation": "1021:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1150,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "754:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "738:29:7",
=======
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1058:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1042:29:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:7",
=======
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1152,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "785:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "769:24:7",
=======
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1089:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1073:24:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:7",
=======
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "737:57:7"
            },
            "src": "711:84:7"
          },
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "911:49:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1159,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1570,
                          "src": "940:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "940:12:7",
                        "tryCall": false,
=======
              "src": "1041:57:0"
            },
            "src": "1015:84:0"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "1259:153:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30,
                      "name": "initialOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1273:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1297:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1289:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1289:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1273:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44,
                  "nodeType": "IfStatement",
                  "src": "1269:95:0",
                  "trueBody": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "1301:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 39,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1350:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 38,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1342:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 37,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1342:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1342:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36,
                            "name": "OwnableInvalidOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1322:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1322:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42,
                        "nodeType": "RevertStatement",
                        "src": "1315:38:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1392:12:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1158,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "921:18:7",
=======
                      "id": 45,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "1373:18:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1161,
=======
                    "id": 47,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "921:32:7",
=======
                    "src": "1373:32:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "921:32:7"
=======
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:32:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1155,
              "nodeType": "StructuredDocumentation",
              "src": "801:91:7",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 1164,
=======
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "1105:115:0",
              "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
            },
            "id": 50,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:7"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:7"
            },
            "scope": 1245,
            "src": "897:63:7",
=======
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1245:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "1237:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1236:22:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:0"
            },
            "scope": 147,
            "src": "1225:187:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1172,
              "nodeType": "Block",
              "src": "1091:30:7",
              "statements": [
                {
                  "expression": {
                    "id": 1170,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1148,
                    "src": "1108:6:7",
=======
              "id": 57,
              "nodeType": "Block",
              "src": "1521:41:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53,
                      "name": "_checkOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "1531:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:13:0"
                },
                {
                  "id": 56,
                  "nodeType": "PlaceholderStatement",
                  "src": "1554:1:0"
                }
              ]
            },
            "documentation": {
              "id": 51,
              "nodeType": "StructuredDocumentation",
              "src": "1418:77:0",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 58,
            "name": "onlyOwner",
            "nameLocation": "1509:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:2:0"
            },
            "src": "1500:62:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "1693:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 64,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "1710:6:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 1169,
                  "id": 1171,
                  "nodeType": "Return",
                  "src": "1101:13:7"
=======
                  "functionReturnParameters": 63,
                  "id": 65,
                  "nodeType": "Return",
                  "src": "1703:13:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1165,
              "nodeType": "StructuredDocumentation",
              "src": "966:65:7",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 1173,
=======
              "id": 59,
              "nodeType": "StructuredDocumentation",
              "src": "1568:65:0",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 67,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
<<<<<<< HEAD
            "nameLocation": "1045:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:2:7"
            },
            "returnParameters": {
              "id": 1169,
=======
            "nameLocation": "1647:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:2:0"
            },
            "returnParameters": {
              "id": 63,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1168,
=======
                  "id": 62,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 1173,
                  "src": "1082:7:7",
=======
                  "scope": 67,
                  "src": "1684:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:7",
=======
                    "id": 61,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1081:9:7"
            },
            "scope": 1245,
            "src": "1036:85:7",
=======
              "src": "1683:9:0"
            },
            "scope": 147,
            "src": "1638:85:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1186,
              "nodeType": "Block",
              "src": "1230:96:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1177,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "1248:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1248:7:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1179,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "1259:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1180,
=======
              "id": 83,
              "nodeType": "Block",
              "src": "1841:117:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 71,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "1855:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1855:7:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 73,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1884,
                        "src": "1866:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1866:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1855:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82,
                  "nodeType": "IfStatement",
                  "src": "1851:101:0",
                  "trueBody": {
                    "id": 81,
                    "nodeType": "Block",
                    "src": "1880:72:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 77,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1884,
                                "src": "1928:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1928:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76,
                            "name": "OwnableUnauthorizedAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1901:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 79,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "1259:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1248:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 1176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1240:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:68:7"
                },
                {
                  "id": 1185,
                  "nodeType": "PlaceholderStatement",
                  "src": "1318:1:7"
=======
                          "src": "1901:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "RevertStatement",
                        "src": "1894:47:0"
                      }
                    ]
                  }
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1174,
              "nodeType": "StructuredDocumentation",
              "src": "1127:77:7",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 1187,
            "name": "onlyOwner",
            "nameLocation": "1218:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:7"
            },
            "src": "1209:117:7",
            "virtual": false,
=======
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "1729:62:0",
              "text": " @dev Throws if the sender is not the owner."
            },
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOwner",
            "nameLocation": "1805:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:2:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:0:0"
            },
            "scope": 147,
            "src": "1796:162:0",
            "stateMutability": "view",
            "virtual": true,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1200,
              "nodeType": "Block",
              "src": "1722:47:7",
=======
              "id": 97,
              "nodeType": "Block",
              "src": "2347:47:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
<<<<<<< HEAD
                            "id": 1196,
=======
                            "id": 93,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
                            "src": "1759:1:7",
=======
                            "src": "2384:1:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
<<<<<<< HEAD
                          "id": 1195,
=======
                          "id": 92,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                          "src": "1751:7:7",
=======
                          "src": "2376:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 1194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1751:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1197,
=======
                            "id": 91,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2376:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 94,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "1751:10:7",
=======
                        "src": "2376:10:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1193,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "1732:18:7",
=======
                      "id": 90,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2357:18:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1198,
=======
                    "id": 95,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1732:30:7",
=======
                    "src": "2357:30:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:30:7"
=======
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:30:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1188,
              "nodeType": "StructuredDocumentation",
              "src": "1332:331:7",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 1201,
=======
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "1964:324:0",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 98,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 1191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1190,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1712:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1187,
                  "src": "1712:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1712:9:7"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "1677:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1694:2:7"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:7"
            },
            "scope": 1245,
            "src": "1668:101:7",
=======
                "id": 88,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2337:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2337:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2337:9:0"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "2302:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:2:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:0:0"
            },
            "scope": 147,
            "src": "2293:101:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1223,
              "nodeType": "Block",
              "src": "1988:128:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1210,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1204,
                          "src": "2006:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2026:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
=======
              "id": 125,
              "nodeType": "Block",
              "src": "2613:145:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 106,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2627:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2647:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2639:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2639:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2627:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 120,
                  "nodeType": "IfStatement",
                  "src": "2623:91:0",
                  "trueBody": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "2651:63:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2700:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2692:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 113,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2692:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2692:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2018:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1211,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2018:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
=======
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 112,
                            "name": "OwnableInvalidOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2672:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
                          "src": "2018:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2006:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2030:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1998:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1998:73:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "1998:73:7"
=======
                          "src": "2672:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 118,
                        "nodeType": "RevertStatement",
                        "src": "2665:38:0"
                      }
                    ]
                  }
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1220,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "2100:8:7",
=======
                        "id": 122,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "2742:8:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1219,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "2081:18:7",
=======
                      "id": 121,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2723:18:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1221,
=======
                    "id": 123,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2081:28:7",
=======
                    "src": "2723:28:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1222,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:28:7"
=======
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:28:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1202,
              "nodeType": "StructuredDocumentation",
              "src": "1775:138:7",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 1224,
=======
              "id": 99,
              "nodeType": "StructuredDocumentation",
              "src": "2400:138:0",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 126,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 1207,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1206,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1978:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1187,
                  "src": "1978:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1978:9:7"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "1927:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1205,
=======
                "id": 104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2603:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "2603:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2603:9:0"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "2552:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1953:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "1945:16:7",
=======
                  "id": 101,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2578:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "2570:16:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:7",
=======
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1944:18:7"
            },
            "returnParameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:7"
            },
            "scope": 1245,
            "src": "1918:198:7",
=======
              "src": "2569:18:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2613:0:0"
            },
            "scope": 147,
            "src": "2543:215:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 1243,
              "nodeType": "Block",
              "src": "2333:124:7",
              "statements": [
                {
                  "assignments": [
                    1231
=======
              "id": 145,
              "nodeType": "Block",
              "src": "2975:124:0",
              "statements": [
                {
                  "assignments": [
                    133
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "2351:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1243,
                      "src": "2343:16:7",
=======
                      "id": 133,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "2993:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 145,
                      "src": "2985:16:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2343:7:7",
=======
                        "id": 132,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2985:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1233,
                  "initialValue": {
                    "id": 1232,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1148,
                    "src": "2362:6:7",
=======
                  "id": 135,
                  "initialValue": {
                    "id": 134,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8,
                    "src": "3004:6:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "2343:25:7"
                },
                {
                  "expression": {
                    "id": 1236,
=======
                  "src": "2985:25:0"
                },
                {
                  "expression": {
                    "id": 138,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 1234,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "2378:6:7",
=======
                      "id": 136,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "3020:6:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 1235,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "2387:8:7",
=======
                      "id": 137,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "3029:8:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "2378:17:7",
=======
                    "src": "3020:17:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 1237,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:17:7"
=======
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:17:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1239,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1231,
                        "src": "2431:8:7",
=======
                        "id": 141,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "3073:8:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1240,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1227,
                        "src": "2441:8:7",
=======
                        "id": 142,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "3083:8:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1238,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "2410:20:7",
=======
                      "id": 140,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3052:20:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1241,
=======
                    "id": 143,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2410:40:7",
=======
                    "src": "3052:40:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 1242,
                  "nodeType": "EmitStatement",
                  "src": "2405:45:7"
=======
                  "id": 144,
                  "nodeType": "EmitStatement",
                  "src": "3047:45:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 1225,
              "nodeType": "StructuredDocumentation",
              "src": "2122:143:7",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
            },
            "id": 1244,
=======
              "id": 127,
              "nodeType": "StructuredDocumentation",
              "src": "2764:143:0",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
            },
            "id": 146,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
<<<<<<< HEAD
            "nameLocation": "2279:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1228,
=======
            "nameLocation": "2921:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2306:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "2298:16:7",
=======
                  "id": 129,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2948:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2940:16:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:7",
=======
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2940:7:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2297:18:7"
            },
            "returnParameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:0:7"
            },
            "scope": 1245,
            "src": "2270:187:7",
=======
              "src": "2939:18:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:0"
            },
            "scope": 147,
            "src": "2912:187:0",
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
<<<<<<< HEAD
        "scope": 1246,
        "src": "639:1820:7",
        "usedErrors": [],
        "usedEvents": [
          1154
        ]
      }
    ],
    "src": "87:2373:7"
=======
        "scope": 148,
        "src": "663:2438:0",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24
        ]
      }
    ],
    "src": "102:3000:0"
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
<<<<<<< HEAD
  "updatedAt": "2024-06-04T09:23:57.407Z",
  "devdoc": {
    "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract setting the deployer as the initial owner."
=======
  "updatedAt": "2024-06-01T06:54:56.672Z",
  "devdoc": {
    "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract setting the address provided by the deployer as the initial owner."
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
<<<<<<< HEAD
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
=======
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
>>>>>>> a5e8223d0b3a0bfde2666d0211a2950b100cee32
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}